git init // initialize a git repository inside current directory

git status // shows the current staging area
git add // add file to staging area // ex. ( git add . ) 
git commit -m "text" // commit with a message
git log // show past commits

git config --global user.name "John Doe"
git config --global user.email johndoe@example.com
git config --global user.name - display current username
git config --global user.email - display current email
// using --global is only needed if you want to setup a username/email that will automatcally be assigned to every new git repo.

// To use a unique name
git config user.name "name"
git config user.email "email"

Working Directory
	Initialize the git repository.
	Git tracks the changes between working directory and local repository.
Staging Area
	Allows you to figure out which files to ignore and which to track.
Local Repostory
	Commit the files to the repostitory.
Remote Repository
	remote git repos
	
git diff FileName - see the differences between a modified file and the master file.
git checkout [filename] // BEFORE A FILE IS COMMITTED, replace the current version of a file with the version from the last time it was committed.

git checkout [commit-ref] -- [filename] // restore a file to a version from a previous commit using [commit-ref].
// append a ~1 to [commit-ref] ( [commit-ref]~1) if you want to restore to a commit before the commit reference hash

git rm --cached -r . // Clear the current Staging Area. Used after git add. Before git commit.

// Remote repo setup
git remote add origin https://github.com/MyGoodFriend/Story.git // add remote repository to git instance
git push -u origin master // commit local repo to remote repo

git push // Use this to push changes after the initial remote repo setup

git clone [git_url] // download a project from a public git repo.
// you can use git log to see the downloaded projects previous commits

// branching
git branch [branch-name]   // create a new branch.
git branch // see the branches, * next to the branch you're currently on.
git checkout [branch-name] // switch to a different branch.

// When using git log. (HEAD -> master) is the local branch. (origin/master) is the remote branch.

// merging
git merge [branch to merge with current branch] // when on masyer branch, merge it with a new branch